openapi: 3.0.1
info:
  title: SOG Seller API
  description: testing this stuff
  contact:
    email: mpannella@sourceofgoods.com
  version: 1.0.0-oas3
servers:
  - url: 'https://virtserver.swaggerhub.com/Source-Of-Goods/sog/1.0.0'
  - url: 'https://www.sourceofgoods.com/api'
tags:
  - name: sellers
    description: Secured Seller-only calls
paths:
  /products/{sku}:
    get:
      tags:
        - sellers
      summary: Get info for one product
      description: Retrieve info about the given product sku
      operationId: productGet
      parameters:
      - name: sku
        in: path
        description: SKU of product to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: bad input parameter
          content: {}
  /products:
    get:
      tags:
        - sellers
      summary: Get products
      description: |
        Retrieve list of all products
      operationId: productsGet
      parameters:
        - name: limit
          in: query
          description: limit number of results
          schema:
            type: integer
        - name: offset
          in: query
          description: offset from 0
          schema:
            type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: 'the offset id to be used in future calls, for pagination'
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '400':
          description: bad input parameter
          content: {}
  /orders/{order_id}:
    get:
      tags:
        - sellers
      summary: Get one order
      description: Retrieve details for a single order
      operationId: orderGet
      parameters:
      - name: order_id
        in: path
        description: Order number of order to return
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: bad input parameter
          content: {}
    put:
      tags:
        - sellers
      summary: Update order
      description: Update an existing order
      operationId: orderPut
      parameters:
      - name: order_id
        in: path
        description: Order number of order to return
        required: true
        schema:
          type: integer
      requestBody:
        description: Order information and items
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '204':
          description: order updated
          content: {}
        '400':
          description: 'invalid input, object invalid'
          content: {}
  /orders:
    get:
      tags:
        - sellers
      summary: Get orders
      description: |
        Get a list of orders
      operationId: ordersGet
      parameters:
        - name: status
          in: query
          description: status of order
          schema:
            type: string
        - name: channel
          in: query
          description: order channel
          schema:
            type: string
        - name: from_date
          in: query
          description: starting datetime ISO-8601
          schema:
            type: string
            format: date-time
        - name: to_date
          in: query
          description: ending datetime ISO-8601
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: limit number of results
          schema:
            type: integer
        - name: offset
          in: query
          description: offset from 0
          schema:
            type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: 'the offset id to b e used in future calls, for pagination'
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '400':
          description: bad input parameter
          content: {}
    post:
      tags:
        - sellers
      summary: creates new order
      description: Add a new order into the system
      operationId: orderPost
      requestBody:
        description: Order information and items
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: false
      responses:
        '201':
          description: order created
          content: {}
        '400':
          description: 'invalid input, object invalid'
          content: {}
components:
  schemas:
    Address:
      type: object
      required:
        - name
        - address_1
        - city
        - state
        - country
        - zip
      properties:
        name:
          type: string
        address_1:
          type: string
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zip:
          type: integer
    Product:
      type: object
      properties:
        sku:
          type: string
        name:
          type: string
        mpn:
          type: string
        upc:
          type: string
        asin:
          type: string
        description:
          type: string
        leadTime:
          type: integer
        leadTimeBusDays:
          type: integer
        size:
          type: string
        color:
          type: string
        cost:
          type: number
          format: float
        ship48:
          type: number
          format: float
        mapPrice:
          type: number
          format: float
        quantityAvailable:
          type: integer
          readOnly: true
        weight:
          type: number
          description: in lbs
          format: float
        shipWeight:
          type: number
          description: in lbs
          format: float
    OrderItem:
      required:
        - quantity
        - sku
      type: object
      properties:
        sku:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: float
        shipping_price:
          type: number
          format: float
        tracking:
          type: string
          readOnly: true
    Order:
      required:
        - channel
        - channel_order_id
        - email
        - order_items
        - phone
        - ship_contact
      type: object
      properties:
        order_id:
          type: integer
          readOnly: true
        channel:
          type: string
          enum:
            - Amazon
            - Ebay
            - Custom Resource
        channel_order_id:
          type: string
        order_date:
          type: string
          format: date
        ship_by_date:
          type: string
          format: date
        ship_contact:
          $ref: '#/components/schemas/Address'
        bill_contact:
          $ref: '#/components/schemas/Address'
        phone:
          type: string
        email:
          type: string
        tracking:
          type: string
          readOnly: true
        carrier:
          type: string
          readOnly: true
        total:
          type: number
          format: float
        seller_cost_total:
          type: number
          format: float
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      description: an order