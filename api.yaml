openapi: 3.0.1
info:
  title: SOG Seller API
  description: Basic API for Sellers to access orders and products in Source of Goods. Base URL - https://www.sourceofgoods.com/api
  contact:
    email: rafi@sourceofgoods.com
  version: 1.0.0-oas3
servers:
  - url: 'https://www.sourceofgoods.com/api'
tags:
  - name: Orders
    description: API Calls for accessing and posting orders. Requires username and password sent via Basic Http Auth
  - name: Products
    description: API Calls for accessing products and inventory. Requires username and password sent via Basic Http Auth
paths:
  /products/{sku}:
    get:
      tags:
        - Products
      summary: Get info for one product
      description: Retrieve details for one product sku
      operationId: productGet
      parameters:
      - name: sku
        in: path
        description: SKU of product to look up
        required: true
        schema:
          type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: 'Product not found'
          content: {}
        '422':
          description: bad input parameter
          content: {}
  /products:
    get:
      tags:
        - Products
      summary: Get products
      description: |
        Retrieve list of all products, Default limit of 10000 records per call. If a cursor is sent back with the results, pass it back up with the next call to receive the next page of data.
      operationId: productsGet
      parameters:
        - name: limit
          in: query
          description: limit number of results
          schema:
            type: integer
        - name: cursor
          in: query
          description: pointer used for pagination
          schema:
            type: integer
        - name: brand
          in: query
          description: filter by brand
          schema:
            type: string
        - name: minCost
          in: query
          description: filter by minimum base cost
          schema:
            type: number
            format: float
        - name: maxCost
          in: query
          description: filter by maximum base cost
          schema:
            type: number
            format: float
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: integer
                    description: 'the pointer used for pagination'
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '422':
          description: bad input parameter
          content: {}
  /products/inventory:
    get:
      tags:
        - Products
      summary: Get inventory for all products
      description: Retrieve the quantity available, and seller cost for every product. If a cursor is sent back with the results, pass it back up with the next call to receive the next page of data.
      operationId: inventoryGetAll
      parameters:
        - name: limit
          in: query
          description: limit number of results
          schema:
            type: integer
        - name: cursor
          in: query
          description: pointer used for pagination
          schema:
            type: integer
        - name: inStock
          in: query
          description: filter out out of stock items
          schema:
            type: boolean
      responses:
        '200':
          description: Quantity
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: integer
                    description: 'the pointer used for pagination'
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductInventory'
        '422':
          description: bad input parameter
          content: {}
  /products/inventory/{sku}:
    get:
      tags:
        - Products
      summary: Get inventory for one product
      description: Retrieve the quantity available, and seller cost for the given product sku.
      operationId: inventoryGetBySku
      parameters:
      - name: sku
        in: path
        description: SKU of product to check inventory for
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Quantity and cost
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInventory'
        '404':
          description: 'Product not found'
          content: {}
        '422':
          description: bad input parameter
          content: {}
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get one order
      description: Retrieve details for a single order
      operationId: orderGet
      parameters:
      - name: orderId
        in: path
        description: Order number of order to return
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: 'Order not found'
          content: {}
        '422':
          description: bad input parameter
          content: {}
    patch:
      tags:
        - Orders
      summary: Update an order
      description: Update an existing order. Any supplied fields will overright the existing one. Orders can only be updated if they are still at the "Order Placed" status. 
      operationId: orderPatch
      parameters:
      - name: orderId
        in: path
        description: Order number of order to return
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        description: Order information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPatch'
      responses:
        '200':
          description: order updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    description: The orderId of the updated order
                  productErrors:
                    type: array
                    description: 'list of products that were unable to be added to the order'
                    items:
                      type: string
        '404':
          description: 'Order not found'
          content: {}
        '422':
          description: 'invalid input, object invalid'
          content: {}
  /orders:
    get:
      tags:
        - Orders
      summary: Get orders
      description: |
        Get a list of orders, by default it only shows the current year, unless a fromDate is supplied. Default limit of 5000 records per call. If a cursor is sent back with the results, pass it back up with the next call to receive the next page of data.
      operationId: ordersGet
      parameters:
        - name: status
          in: query
          description: status of order
          schema:
            type: string
            enum:
              - "Order Placed"
              - "Order Received"
              - "Processing"
              - "Shipped"
              - "Delivered"
              - "Canceled"
              - "Order on Hold - Awaiting Seller Payment"
              - "Partially Canceled"
        - name: channel
          in: query
          description: order channel
          schema:
            type: string
            enum:
              - Amazon
              - Ebay
              - Custom Resource
        - name: fromDate
          in: query
          description: starting datetime ISO-8601
          schema:
            type: string
            format: date-time
        - name: toDate
          in: query
          description: ending datetime ISO-8601
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: limit number of results
          schema:
            type: integer
        - name: cursor
          in: query
          description: pointer used for pagination
          schema:
            type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: integer
                    description: 'the pointer used for pagination'
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '422':
          description: bad input parameter
          content: {}
    post:
      tags:
        - Orders
      summary: creates new orders
      description: Add a new order into the system
      operationId: orderPost
      requestBody:
        required: true
        description: Order information and items
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    description: The orderId of the new order
                  productErrors:
                    type: array
                    description: 'list of products that were unable to be added to the order'
                    items:
                      type: string
        '422':
          description: 'invalid input, object invalid'
          content: {}
components:
  securitySchemes:
      basicAuth:
        type: http
        scheme: basic
        description: Your username and password can be generated at https://www.sourceofgoods.com/api.php
  schemas:
    Address:
      type: object
      required:
        - name
        - address1
        - city
        - state
        - country
        - zip
      properties:
        name:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
          minLength: 2
          maxLength: 2
        country:
          type: string
        zip:
          type: string
          minLength: 4
          maxLength: 10
    Product:
      type: object
      properties:
        sku:
          type: string
        name:
          type: string
        mpn:
          type: string
        upc:
          type: string
        asin:
          type: string
        description:
          type: string
        leadTime:
          type: integer
        leadTimeBusDays:
          type: integer
        size:
          type: string
        color:
          type: string
        baseCost:
          type: number
          format: float
          description: Base cost of the item, before markup or shipping.
        totalSellerCost:
          type: number
          format: float
          description: The total final cost. Includes product price, shipping cost, and markup.
        ship48:
          type: number
          format: float
          description: Shipping price for 48 continental states
        shipAKHI:
          type: number
          format: float
          description: Shipping price for AK and HI
        mapPrice:
          type: number
          format: float
        weight:
          type: number
          description: in lbs
          format: float
        shipWeight:
          type: number
          description: in lbs
          format: float
        image:
          type: string
          format: uri
    ProductInventory:
      required:
        - sku
        - totalSellerCost
        - quantityAvailable
      type: object
      properties:
        sku:
          type: string
        totalSellerCost:
          type: number
          format: float
          description: The total final cost. Includes product price, shipping cost, and markup.
        quantityAvailable:
          type: integer
    OrderItem:
      required:
        - quantity
        - sku
      type: object
      properties:
        sku:
          type: string
          pattern: '^[-a-zA-Z0-9\/+*]+$'
        quantity:
          type: integer
          minimum: 1
        price:
          type: number
          format: float
          readOnly: true
        sellerCost:
          type: number
          format: float
          readOnly: true
        shippingPrice:
          type: number
          format: float
          readOnly: true
        tracking:
          type: string
          readOnly: true
    Order:
      required:
        - channel
        - channelOrderId
        - email
        - orderItems
        - phone
        - shipContact
        - shipByDate
      type: object
      properties:
        orderId:
          type: integer
          readOnly: true
        channel:
          type: string
          enum:
            - Amazon
            - Ebay
            - Custom Resource
        status:
          type: string
          enum:
            - "Order Placed"
            - "Order Received"
            - "Processing"
            - "Shipped"
            - "Delivered"
            - "Canceled"
            - "Order on Hold - Awaiting Seller Payment"
            - "Partially Canceled"
          readOnly: true
        channelOrderId:
          type: string
          pattern: '^[-a-zA-Z0-9\/+*#]+$'
          description: Alphanumeric string, may include special characters -/+#*
        orderDate:
          type: string
          format: date-time
        shipByDate:
          type: string
          format: date-time
        shipContact:
          $ref: '#/components/schemas/Address'
        billContact:
          $ref: '#/components/schemas/Address'
        phone:
          type: string
          pattern: '^[-0-9a-zA-Z\.+ ]{10,}$'
          example: "+1 416-251-9136 ext. 2308"
        email:
          type: string
          format: email
        tracking:
          type: string
          readOnly: true
        carrier:
          type: string
          readOnly: true
        total:
          type: number
          format: float
          readOnly: true
        sellerCostTotal:
          type: number
          format: float
          readOnly: true
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      description: an order
    OrderPatch:
      type: object
      properties:
        channel:
          type: string
          enum:
            - Amazon
            - Ebay
            - Custom Resource
        channelOrderId:
          type: string
        phone:
          type: string
          pattern: '^[-0-9a-zA-Z\.+ ]{10,}$'
          example: "+1 416-251-9136 ext. 2308"
        email:
          type: string
          format: email
        shipContact:
          $ref: '#/components/schemas/Address'
        billContact:
          $ref: '#/components/schemas/Address'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      description: Order details that are patchable
security:
  - basicAuth: []